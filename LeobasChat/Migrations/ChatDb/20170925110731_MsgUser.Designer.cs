// <auto-generated />
using LeobasChat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LeobasChat.Migrations.ChatDb
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20170925110731_MsgUser")]
    partial class MsgUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeobasChat.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Avatar");

                    b.Property<int?>("ChatRoomId");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Mood");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Status");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("LeobasChat.Data.ChatRoom", b =>
                {
                    b.Property<int>("ChatRoomId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Name");

                    b.Property<int>("UserLimit");

                    b.HasKey("ChatRoomId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("LeobasChat.Data.ChatUser", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<int>("ChatRoomId");

                    b.Property<int>("ChatUserId");

                    b.Property<int>("CommandInter");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Message");

                    b.HasKey("UserId");

                    b.HasIndex("ChatRoomId");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("LeobasChat.Data.ApplicationUser", b =>
                {
                    b.HasOne("LeobasChat.Data.ChatRoom")
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatRoomId");
                });

            modelBuilder.Entity("LeobasChat.Data.ChatUser", b =>
                {
                    b.HasOne("LeobasChat.Data.ChatRoom", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LeobasChat.Data.ApplicationUser", "User")
                        .WithMany("EnteredChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
